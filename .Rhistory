LisDate
IntDate
unclass(LisDate)
unclass(IntDate)
sort(islands)
iris[1,2] #(Row 1, Column 2)
iris[,"Species"] #Column name=="Species"
iris$Species #Column name=="Species"
subset(iris, Species=="virginica") #Species == "virginica"
iris[iris$Species=="virginica",]#Species == "virginica"
San<-subset(NBA1415,Team=='SAN')
San
str(iris)
str(NBA1415)
available.packages()
head(available.packages())
install.packages("ggplot2")
library(ggplot2)
library("ggplot2")
library(ggplot2)
library(stringr)
str_trim("Hello World   ")
paste(c("Hello", "World"), sep='')
paste(c("Hello", "World"), sep='',collapse = '')
grep("Duncan",NBA1415$Name)
NBA1415[grep("Duncan",NBA1415$Name),]
grepl("Duncan",NBA1415$Name)
subset(NBA1415,grepl("Duncan",Name))
which(letters>"m")
ifelse(a>10,b<-10,ifelse(a>5,b<-5,b<-a))
sapply(NBA1415[,c("GamesPlayed","TotalMinutesPlayed","TotalPoints")],mean)
lapply(NBA1415[,c("GamesPlayed","TotalMinutesPlayed","TotalPoints")],mean)
tapply(NBA1415$Name,NBA1415$Team,length)
tapply(NBA1415$TotalPoints,NBA1415$Team,max)
tapply(NBA1415$TotalPoints,NBA1415$Team,mean)
tapply(NBA1415$TotalPoints,NBA1415$Team,range)
tapply(1:30,gl(3, 10),mean)
lapply(split(1:30,gl(3, 10)),mean)
NBA1415Team<-split(NBA1415[,c("TotalPoints","GamesPlayed")],NBA1415$Team)
lapply(NBA1415Team, colMeans)
lapply(NBA1415Team)
sapply(NBA1415Team, colMeans)
aggregate(TotalPoints ~ Team+Position, data = NBA1415, mean)
mean(x)
mean(x, na.rm=T)
x<-c(1,2,3,4,5)
mean(x)
x<-c(x,NA)
mean(x)
mean(x, na.rm=T)
sum(x)
sum(x, na.rm=T)
system.time({
n <- 1000
r <- numeric(n)
for(i in 1:n) {
x <- rnorm(n)
r[i] <- mean(x)
}
})
x <- list(foo = 1:4, bar = 0.6, baz = "hello")
x[1]
x[[1]]
x[2]
x[[2]]
x$foo
#55=4
x <- c(1, 2, NA, 4, NA, 5)
x[! is.na(x)]
x[! complete.cases(x)]
complete.cases(x)
x<-1:3
y<-10:12
cbind(x, y) #組合Column列
rbind(x, y) #組合Row行
head(NBA1415,3) #表格前三行
nrow(NBA1415) #表格有幾行Row
ncol(NBA1415) #表格有幾列Column
NBA1415[1:3,] # 取前三行
NBA1415[,2] # 取第二列
head(NBA1415[,"Name"])
# 取Team是SAN的所有行Row, 同 subset(NBA1415, Team=="SAN")
head(NBA1415[NBA1415$Team=="SAN",])
grep("Tim",NBA1415$Name) #回傳符合條件的row index
head(grepl("Tim",NBA1415$Name)) #回傳T or F
NBA1415[grep("Tim",NBA1415$Name),] #搭配subset
San[order(San$TotalPoints,decreasing = T)[1],
c("Name","Team","TotalPoints")]
sapply(iris, mean)
lapply(iris, mean)
lapply(NBA1415[,c("GamesPlayed","TotalMinutesPlayed","TotalPoints")],
mean)
```
split(1:30,gl(3, 10))
(split(1:30,gl(3, 10))
lapply(split(1:30,gl(3, 10)),mean)
lapply(split(1:30,gl(3, 10)),mean)
```
效果等同於
tapply(1:30,gl(3, 10),mean)
NBA1415Team<-split(NBA1415[,c("TotalPoints","GamesPlayed")],
NBA1415$Team)
NBA1415Team
lapply(NBA1415Team, colMeans) #回傳List
sapply(NBA1415Team, colMeans) #回傳Data frame
NBA1415TP<-split(NBA1415[,c("TotalPoints","GamesPlayed")],
list(NBA1415$Team,NBA1415$Position))
sapply(NBA1415TP, colMeans)#一樣可以用apply家族計算平均值
aggregate(TotalPoints ~ Team+Position,
data = NBA1415, mean)
x <- c(1, 2, NA, 4, NA, 5)
! is.na(x)
complete.cases(x)
is.na(x)
!complete.cases(x) #可使用在data frame，取出所有欄位都不是NA的row
polio<-read.csv("POLIO_Incidence.csv",stringsAsFactors = F)
head(polio)
polio<-read.csv("POLIO_Incidence.csv",stringsAsFactors = F)
nba <- read.csv("http://datasets.flowingdata.com/ppg2008.csv")
head(nba)
library(ggplot2) #for fortify(), ggplot(), ggmap()
library(reshape2) #for melt()
library(ggplot2) #for fortify(), ggplot(), ggmap()
install.packages("ggplot2")
install.packages("ggplot2");
install.packages("ggplot2")
library(ggplot2) #for fortify(), ggplot(), ggmap()
if (!require('treemapify')){
library(devtools) #install.packages("devtools") 沒安裝過記得先裝
install_github("wilkox/treemapify") #從GitHub安裝測試版Packages,需要安裝devtools
library(treemapify)
}
library(devtools)
install_github("wilkox/treemapify")
if (!require('treemapify')){
library(devtools) #install.packages("devtools") 沒安裝過記得先裝
install_github("wilkox/treemapify") #從GitHub安裝測試版Packages,需要安裝devtools
library(treemapify)
}
install.packages("devtools")
install_github("wilkox/treemapify") #從GitHub安裝測試版Packages,需要安裝devtools
if (!require('treemapify')){
library(devtools) #install.packages("devtools") 沒安裝過記得先裝
install_github("wilkox/treemapify") #從GitHub安裝測試版Packages,需要安裝devtools
library(treemapify)
}
if (!require('treemapify')){
library(devtools) #install.packages("devtools") 沒安裝過記得先裝
install_github("wilkox/treemapify") #從GitHub安裝測試版Packages,需要安裝devtools
library(treemapify)
}
install_github("wilkox/treemapify") #從GitHub安裝測試版Packages,需要安裝devtools
library(treemapify)
data(G20)#範例資料
head(G20)
if (!require('treemapify')){
library(devtools) #install.packages("devtools") 沒安裝過記得先裝
install_github("wilkox/treemapify") #從GitHub安裝測試版Packages,需要安裝devtools
library(treemapify)
}
data(G20)#範例資料
head(G20)
polio<-read.csv("POLIO_Incidence.csv",stringsAsFactors = F)
polio<-read.csv("POLIO_Incidence.csv",stringsAsFactors = F)
head(polio)
polio<-read.csv("http://datasets.flowingdata.com/ppg2008.csv",stringsAsFactors = F)
head(polio)
```
```{r}
#將寬表格轉為長表格，以年(YEAR)/週(WEEK)為基準，各州名column打散變長
polio.m<-melt(polio,id.vars = c('YEAR','WEEK'))
head(polio.m)
polio.m<-melt(polio,id.vars = c('YEAR','WEEK'))
install.packages("reshape"); library(reshape)
polio.m<-melt(polio,id.vars = c('YEAR','WEEK'))
polio.m<-melt(polio,id.vars = c('G','MIN'))
head(polio.m)
polio.m[polio.m$value=="-",]$value<-NA #處理缺值,將"-"轉為NA
polio.m$value<-as.numeric(polio.m$value) #將value欄位轉為數字
polio.sumYear<- #各州各年度加總，計算該年度的總發生率
aggregate(value~YEAR+variable,data=polio.m,FUN=sum,na.rm=F)
polio.m[polio.m$value=="-",]$value<-NA #處理缺值,將"-"轉為NA
polio.m$value<-as.numeric(polio.m$value) #將value欄位轉為數字
polio.sumYear<- #各州各年度加總，計算該年度的總發生率
aggregate(value~G+variable,data=polio.m,FUN=sum,na.rm=F)
head(polio.sumYear)
polio<-read.csv("POLIO_Incidence.csv",stringsAsFactors = F)
polio<-read.csv("POLIO_Incidence.csv",stringsAsFactors = F)
polio<-read.csv("POLIO_Incidence.csv",stringsAsFactors = F)
polio<-read.csv("POLIO_Incidence.csv",stringsAsFactors = F)
head(polio)
```
```{r}
#將寬表格轉為長表格，以年(YEAR)/週(WEEK)為基準，各州名column打散變長
polio.m<-melt(polio,id.vars = c('YEAR','WEEK'))
head(polio.m)
```
```{r}
polio.m[polio.m$value=="-",]$value<-NA #處理缺值,將"-"轉為NA
polio.m$value<-as.numeric(polio.m$value) #將value欄位轉為數字
polio.sumYear<- #各州各年度加總，計算該年度的總發生率
aggregate(value~YEAR+variable，,data=polio.m,FUN=sum,na.rm=F)
head(polio.sumYear)
```
##視覺畫呈現
我選擇使用Heatmap來畫圖，因要求1928-1969間小兒麻痺在美國各洲的發生率變化，表示需要用三維的圖來呈現各洲每年的發生率，x軸放年度，y軸放各洲的名字，每個點則放小兒麻痺的發生率，藉此就能清楚比較每個洲每年的發生率之間的關係，也可以清楚看到在1955年之後，發生率都有變小的趨勢。
```{r}
polio[,3:52]<-apply(polio[,3:52], 2, scale) #scale處理，將數值轉為平均=0
ggplot(polio.m, aes(year, variable)) + #aes(x,y)
geom_tile(aes(fill = value),colour = "white")+ #geom_tile: 區塊著色
scale_fill_gradient(low = "white",high = "steelblue") #數值低：白色
(polio,id.vars = c('YEAR','WEEK'))
polio.m<-melt(polio,id.vars = c('YEAR','WEEK'))
head(polio.m)
polio[,3:52]<-apply(polio[,3:52], 2, scale) #scale處理，將數值轉為平均=0
ggplot(polio.m, aes(YEAR, variable)) + #aes(x,y)
geom_tile(aes(fill = value),colour = "white")+ #geom_tile: 區塊著色
scale_fill_gradient(low = "white",high = "steelblue")
polio[,3:52]<-apply(polio[,3:52], 2, scale) #scale處理，將數值轉為平均=0
ggplot(polio.m, aes(YEAR, variable)) + #aes(x,y)
geom_tile(aes(fill = value),colour = "white")+ #geom_tile: 區塊著色
scale_fill_gradient(low = "white",high = "steelblue")
View(polio)
View(polio)
View(polio)
View(polio)
polio<-read.csv("POLIO_Incidence.csv",stringsAsFactors = F)
head(polio)
```
```{r}
#將寬表格轉為長表格，以年(YEAR)/週(WEEK)為基準，各州名column打散變長
polio.m<-melt(polio,id.vars = c('YEAR','WEEK'))
#scale處理，將數值轉為平均=0
polio[,3:53]<-apply(polio[,3:53], 2, scale)
head(polio.m)
polio[,3:53]<-apply(polio[,3:53], 2, scale)
View(polio)
View(polio)
polio.m<-melt(polio,id.vars = c('YEAR','WEEK'))
head(polio.m)
polio.m[polio.m$value=="-",]$value<-NA #處理缺值,將"-"轉為NA
polio.m$value<-as.numeric(polio.m$value) #將value欄位轉為數字
polio.m[,3:4]<-apply(polio.m[,3:4], 2, scale)  #scale處理，將數值轉為平均=0
polio.m[,3:4]<-apply(polio.m[,3:4], 2, scale)(x, na.rm = TRUE)  #scale處理，將數值轉為平均=0
polio.m[,3:4]<-apply(polio.m[,3:4], 2, scale)(polio.m, na.rm = TRUE)  #scale處理，將數值轉為平均=0
polio.m[,3:4]<-apply(polio.m[,3:4], 2, scale,na.rm = F)  #scale處理，將數值轉為平均=0
polio.m[,3:4]<-apply(polio.m[,3:4], 2, scale, na.rm=F)  #scale處理，將數值轉為平均=0
polio.m[,3:4]<-apply(polio.m[,3:4], 2, Fun=scale,na.rm=F)  #scale處理，將數值轉為平均=0
polio.m[,3:4]<-apply(polio.m[,3:4], 2, FUN=scale,na.rm=F)  #scale處理，將數值轉為平均=0
polio.m[,3:4]<-apply(polio.m[,3:4], 2, FUN=(scale,na.rm=F))  #scale處理，將數值轉為平均=0
polio.m[,3:4]<-apply(polio.m[,3:53], 2, scale)  #scale處理，將數值轉為平均=0
polio[,3:4]<-apply(polio[,3:53], 2, scale)  #scale處理，將數值轉為平均=0
polio<-read.csv("POLIO_Incidence.csv",stringsAsFactors = F)
head(polio)
```
```{r}
#將寬表格轉為長表格，以年(YEAR)/週(WEEK)為基準，各州名column打散變長
polio.m<-melt(polio,id.vars = c('YEAR','WEEK'))
head(polio.m)
```
```{r}
polio.m[polio.m$value=="-",]$value<-NA #處理缺值,將"-"轉為NA
polio.m$value<-as.numeric(polio.m$value) #將value欄位轉為數字
polio.sumYear<- #各州各年度加總，計算該年度的總發生率
aggregate(value~YEAR+variable，,data=polio.m,FUN=sum,na.rm=F)
head(polio.sumYear)
```
polio<-read.csv("POLIO_Incidence.csv",stringsAsFactors = F)
head(polio)
polio.m<-melt(polio,id.vars = c('YEAR','WEEK'))
head(polio.m)
polio.m[polio.m$value=="-",]$value<-NA #處理缺值,將"-"轉為NA
View(polio.m)
View(polio.m)
polio.m$value<-as.numeric(polio.m$value) #將value欄位轉為數字
polio.sumYear<- #各州各年度加總，計算該年度的總發生率
aggregate(value~YEAR+variable，,data=polio.m,FUN=sum,na.rm=F)
polio.sumYear<- #各州各年度加總，計算該年度的總發生率
aggregate(value~YEAR+variable,data=polio.m,FUN=sum,na.rm=F)
head(polio.sumYear)
head(polio.sumYear)
View(polio.sumYear)
ggplot(polio.m, aes(YEAR, variable)) + #aes(x,y)
geom_tile(aes(fill = value),colour = "white")+ #geom_tile: 區塊著色
scale_fill_gradient(low = "white",high = "steelblue") #數值低：白色
polio.m[polio.m$value=="-",]$value<-NA #處理缺值,將"-"轉為NA
polio.m$value<-as.numeric(polio.m$value) #將value欄位轉為數字
polio.sumYear<- #各州各年度加總，計算該年度的總發生率
aggregate(value~YEAR+variable,data=polio.m,FUN=sum,na.rm=F)
head(polio.sumYear)
head(polio.m)
polio.m<-melt(polio,id.vars = c('YEAR','WEEK'))
head(polio.m)
head(polio.sumYear)
polio.m[polio.m$value=="-",]$value<-NA #處理缺值,將"-"轉為NA
polio.m$value<-as.numeric(polio.m$value) #將value欄位轉為數字
polio.sumYear<- #各州各年度加總，計算該年度的總發生率
aggregate(value~YEAR+variable,data=polio.m,FUN=ave,na.rm=F)
head(polio.sumYear)
polio.m[polio.m$value=="-",]$value<-NA #處理缺值,將"-"轉為NA
polio.m$value<-as.numeric(polio.m$value) #將value欄位轉為數字
polio.sumYear<- #各州各年度加總，計算該年度的總發生率
aggregate(value~YEAR+variable,data=polio.m,FUN=ave,na.rm=F)
head(polio.sumYear)
aggregate(value~YEAR+variable,data=polio.m,FUN=average,na.rm=F)
head(polio.sumYear)
polio.m[polio.m$value=="-",]$value<-NA #處理缺值,將"-"轉為NA
polio.m$value<-as.numeric(polio.m$value) #將value欄位轉為數字
polio.sumYear<- #各州各年度加總，計算該年度的總發生率
aggregate(value~YEAR+variable,data=polio.m,FUN=sum,na.rm=F)
head(polio.sumYear)
polio.m[polio.m$value=="-",]$value<-NA #處理缺值,將"-"轉為NA
polio.m$value<-as.numeric(polio.m$value) #將value欄位轉為數字
polio.sumYear<- #各州各年度加總，計算該年度的總發生率
aggregate(value~YEAR+variable,data=polio.m,FUN=ave,na.rm=F)
head(polio.sumYear)
View(polio.sumYear)
aggregate(value~YEAR+variable,data=polio.m,FUN=sum,na.rm=F)
head(polio.sumYear)
head(polio.sumYear)
View(polio.sumYear)
polio.m[polio.m$value=="-",]$value<-NA #處理缺值,將"-"轉為NA
polio.m$value<-as.numeric(polio.m$value) #將value欄位轉為數字
polio.sumYear<- #各州各年度加總，計算該年度的總發生率
aggregate(value~YEAR+variable,data=polio.m,FUN=sum,na.rm=F)
head(polio.sumYear)
View(polio.sumYear)
polio.m[polio.m$value=="-",]$value<-NA #處理缺值,將"-"轉為NA
polio.m$value<-as.numeric(polio.m$value)#將value欄位轉為數字
polio.m[,3:4]<-apply(polio[,3:4], 2, scale) #scale處理，將數值轉為平均=0
polio.m$value<-as.numeric(polio.m$value)#將value欄位轉為數字
polio.sumYear<- #各州各年度加總，計算該年度的總發生率
aggregate(value~YEAR+variable,data=polio.m,FUN=sum,na.rm=F)
head(polio.sumYear)
View(polio.sumYear)
View(polio)
head(polio.sumYear)
View(polio.m)
polio.m<-melt(polio,id.vars = c('YEAR','WEEK'))
head(polio.m)
polio.m[polio.m$value=="-",]$value<-NA #處理缺值,將"-"轉為NA
polio.m$value<-as.numeric(polio.m$value)#將value欄位轉為數字
polio.sumYear<- #各州各年度加總，計算該年度的總發生率
aggregate(value~YEAR+variable,data=polio.m,FUN=sum,na.rm=F)
head(polio.sumYear)
ggplot(polio.sumYear)+ #資料為polio.sumYear
geom_line(aes(x=YEAR,y=value,color=variable))+ #geom_line:畫折線圖
geom_vline(xintercept = 1955,colour="black", linetype = "longdash")
dataMatrix <- as.matrix(dataFrame)[sample(1:12),]
dataMatrix <- as.matrix(dataFrame)[sample(1:12),]
x<-scale(mtcars$hp[-1]);y<-scale(mtcars$mpg[-1])
dataFrame <- data.frame(x,y)
dataMatrix <- as.matrix(dataFrame)[sample(1:12),] #先執行99 100行
dataMatrix
wss <- (nrow(dataMatrix)-1)*sum(apply(dataMatrix,2,var))
kmeans(dataMatrix,centers=i
kmeans(dataMatrix,centers=i
for (i in 2:(nrow(dataMatrix)-1)) {
wss[i] <- sum(kmeans(dataMatrix,centers=i)$withinss)
}
par(mfrow=c(1,1), mar = c(4,4,1,1)) #下,左,上,右
plot(1:(nrow(dataMatrix)-1), wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
kmeans(dataMatrix,centers=i
sum(kmeans(dataMatrix,centers=i)
withinss
kmeans(dataMatrix,centers=i)$withinss
kmeans(dataMatrix,centers=4)$withinss
glm(TotalPoints~TotalMinutesPlayed+FieldGoalsAttempted,
data =NBA1516)
NBA1516<-fetch_NBAPlayerStatistics("15-16")
install.packages("SportsAnalytics")
NBA1516<-fetch_NBAPlayerStatistics("15-16")
library(SportsAnalytics)
NBA1516<-fetch_NBAPlayerStatistics("15-16")
data =NBA1516)
glm(TotalPoints~TotalMinutesPlayed+FieldGoalsAttempted+Position,
data =NBA1516)
class(NBA1516$Position)
levels(NBA1516$Position)
OneVar<-glm(TotalPoints~TotalMinutesPlayed,data =NBA1516)
TwoVar<-glm(TotalPoints~TotalMinutesPlayed+FieldGoalsAttempted,
data =NBA1516)
ThreeVar<-glm(TotalPoints~TotalMinutesPlayed+FieldGoalsAttempted+Position,
data =NBA1516)
c(OneVar$aic,TwoVar$aic,ThreeVar$aic)
polio.m[polio.m$value=="-",]$value<-NA #處理缺值,將"-"轉為NA
polio.m[polio.m$value=="-",]$value<-NA #處理缺值,將"-"轉為NA
polio.m$value<-as.numeric(polio.m$value)#將value欄位轉為數字
polio.sumYear<- #各州各年度加總，計算該年度的總發生率
aggregate(value~YEAR+variable,data=polio.m,FUN=sum,na.rm=F)
head(polio.sumYear)
polio.m[polio.m$value=="-",]$value<-NA #處理缺值,將"-"轉為NA
polio<-read.csv("POLIO_Incidence.csv",stringsAsFactors = F)
head(polio)
polio.m<-melt(polio,id.vars = c('YEAR','WEEK'))
head(polio.m)
polio<-read.csv("POLIO_Incidence.csv",stringsAsFactors = F)
head(polio)
```
```{r}
#將寬表格轉為長表格，以年(YEAR)/週(WEEK)為基準，各州名column打散變長
polio.m<-melt(polio,id.vars = c('YEAR','WEEK'))
head(polio.m)
polio.m[polio.m$value=="-",]$value<-NA #處理缺值,將"-"轉為NA
polio.m$value<-as.numeric(polio.m$value) #將value欄位轉為數字
polio.sumYear<- #各州各年度加總，計算該年度的總發生率
aggregate(value~YEAR+variable,data=polio.m,FUN=sum,na.rm=F)
head(polio.sumYear)
polio<-read.csv("POLIO_Incidence.csv",stringsAsFactors = F)
head(polio)
```
```{r}
#將寬表格轉為長表格，以年(YEAR)/週(WEEK)為基準，各州名column打散變長
polio.m<-melt(polio,id.vars = c('YEAR','WEEK'))
install.packages("reshape"); library(reshape) #裝reshape package才能用melt
library(reshape)
polio.m<-melt(polio,id.vars = c('YEAR','WEEK'))
install.packages("reshape"); library(reshape) #裝reshape package才能用melt
polio.m<-melt(polio,id.vars = c('YEAR','WEEK'))
glm(TotalPoints~TotalMinutesPlayed+FieldGoalsAttempted,
data =NBA1516)
polio<-read.csv("POLIO_Incidence.csv",stringsAsFactors = F)
head(polio)
```
```{r}
#將寬表格轉為長表格，以年(YEAR)/週(WEEK)為基準，各州名column打散變長
install.packages("reshape"); library(reshape) #裝reshape package才能用melt
if (!require('SportsAnalytics')){
install.packages("SportsAnalytics")
library(SportsAnalytics)
}
install.packages("reshape"); library(reshape) #裝reshape package才能用melt
glm(TotalPoints~TotalMinutesPlayed+FieldGoalsAttempted+Position,
data =NBA1516)
polio.m<-melt(polio,id.vars = c('YEAR','WEEK'))
install.packages("reshape")
library(reshape) #裝reshape package才能用melt
polio.m<-melt(polio,id.vars = c('YEAR','WEEK'))
head(polio.m)
library(reshape) #裝reshape package才能用melt
if (!require('arules')){
install.packages("arules");library(arules) #for Apriori演算法
}
nstall.packages("datasets")
install.packages("datasets");library(datasets)
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets");
install.packages("datasets")
install.packages("datasets")
install.packages("datasets");library(datasets) #for Groceries data
library(datasets) #
library(datasets)
if (!require('datasets')){
install.packages("datasets");library(datasets) #for Groceries data
}
if (!require('arules')){
install.packages("arules");library(arules) #for Apriori演算法
}
if (!require('datasets')){
install.packages("datasets");library(datasets) #for Groceries data
}
data(Groceries) # Load the data set
Groceries@data@Dim #169 種商品，9835筆交易資料
if (!require('arulesViz')){
install.packages("arulesViz"); library(arulesViz)
}
#Mac->http://planspace.org/2013/01/17/fix-r-tcltk-dependency-problem-on-mac/
plot(rules,method="graph",interactive=TRUE,shading=NA) #會跑一陣子
if (!require('SportsAnalytics')){
install.packages("SportsAnalytics")
library(SportsAnalytics)
}
#擷取2015-2016年球季球員資料
NBA1516<-fetch_NBAPlayerStatistics("15-16")
NBA1516<-NBA1516[complete.cases(NBA1516),]
NBA1516$Test<-F #新增一個參數紀錄分組
#隨機取1/3當Test set
NBA1516[sample(1:nrow(NBA1516),nrow(NBA1516)/3),]$Test<-T
# Training set : Test set球員數
c(sum(NBA1516$Test==F),sum(NBA1516$Test==T))
fit<-glm(TotalPoints~TotalMinutesPlayed+FieldGoalsAttempted+
Position+ThreesAttempted+FreeThrowsAttempted,
data =NBA1516[NBA1516$Test==F,])
fit$aic
summary(fit)$coefficients
library(MASS)
finalModel_B<-stepAIC(fit,direction = "backward",trace=FALSE)
summary(finalModel_B)$coefficients
finalModel_Both<-stepAIC(fit,direction = "both",trace=FALSE)
summary(finalModel_Both)$coefficients
predictPoint<-predict(finalModel_Both, #Test==T, test data
newdata = NBA1516[NBA1516$Test==T,])
cor(x=predictPoint,y=NBA1516[NBA1516$Test==T,]$TotalPoints) #相關係數
plot(x=predictPoint,y=NBA1516[NBA1516$Test==T,]$TotalPoints)
View(NBA1516)
predictPoint
NBA1516[NBA1516$Test==T,]$TotalPoints
cor(x=predictPoint,y=NBA1516[NBA1516$Test==T,]$TotalPoints) #相關係數
mydata <- read.csv("http://www.ats.ucla.edu/stat/data/binary.csv")
mydata$admit <- factor(mydata$admit) # 類別變項要轉為factor
mydata$rank <- factor(mydata$rank) # 類別變項要轉為factor
mydata$Test<-F #新增一個參數紀錄分組
mydata[sample(1:nrow(mydata),nrow(mydata)/3),]$Test<-T #隨機取1/3當Test set
c(sum(mydata$Test==F),sum(mydata$Test==T)) # Training set : Test set學生數
#修改一下factor的level: 改成Level 1為錄取，2為不錄取-->Level 1 要放正面答案
mydata$admit<-factor(mydata$admit,levels=c(1,0))
mydata
str(mydata)
